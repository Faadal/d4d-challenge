# -*- coding: utf-8 -*-
"""
    This class processes the 7 * 24 TSV files containing the location & weight for each antenna,
    according to the required format for the web displayer.
    
    TSVs are generated by network_converter.py/network_creation.py
    
    Created 24/01/2013
    
    @author: Paradigma Labs
"""

from collections import defaultdict
import logging
import traceback

days = ['L', 'M', 'X', 'J', 'V', 'S', 'D']
hours = range(24)

logging.basicConfig(format='[%(levelname)s][%(asctime)s] %(message)s',level=logging.INFO)

data = defaultdict(lambda : defaultdict(list))

for day in days:
    for hour in hours:
        logging.info("Storing data in memory for [%s][%s]" % (day, hour))
        try:
            with(open('../antennas_weight/%s_hour_%s.tsv' % (day, hour),'r')) as data_file:
                for line in data_file.readlines():
                    line = line.replace('\n', '')
                    fields = line.split('\t')
                    try:
                        point = {'coordinates':[float(fields[0]), float(fields[1])], 
                                 'weight': float(fields[2])}
                        data[day][str(hour)].append(point)
                    except ValueError as e:
                        pass
        except Exception as e:
            logging.error("The file %s_hour_%s.tsv does not exist" % (day, hour))

def get_data(day, hour):
    return data.get(day, {}).get(hour, {})

